openapi: 3.0.0
info:
  version: "0.0.1"
  title: "Online Static Analysis Interface"
servers:
  - url: "http://localhost:9090/api"
    description: "Local instance for debugging"
paths:

  /entities:
    get:
      tags: ["Entity Related Information"]
      description: "Returns a paginated list of all program entities index at this point."
      parameters:
        - name: skip
          description: "Pagination: Number of entities to skip"
          in: header
          required: false
          schema:
            type: integer
            default: 0
        - name: limit
          description: "Pagination: Number of entities to retrieve"
          in: header
          required: false
          schema:
            type: integer
            default: 500
        - name: language
          description: "Programming language to filter for"
          in: query
          required: false
          schema:
            type: string
        - name: kind
          description: "Entity kind to filter for"
          in: query
          required: false
          schema:
            type: string
        - name: parent
          description: "Entity parent identifier to filter for"
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: "List of all entities matching the requested filters."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProgramEntity"
  
  /entities/{entityIdent}:
    get:
      tags: ["Entity Related Information"]
      description: "Returns information on the program entity with the given identifier."
      parameters:
        - name: entityIdent
          description: "Identifier of the entity to retrieve"
          in: path
          required: true
          schema:
            type: string
        - name: depth
          description: "The depth of the entity tree that shall be resolved. Defaults to 2."
          in: query
          required: false
          schema:
            type: integer

      responses:
        '200':
          description: "Requested Program Entity is returned"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProgramEntity"
        '404':
          description: "If the entity identifier is not found, 404 is returned."

  /entities/{entityIdent}/children:
    get:
      tags: ["Entity Related Information"]
      description: "Returns a paginated list of program entities that are children of the program entity with the given identifier."
      parameters:
        - name: entityIdent
          description: "Identifier of the entity to retrieve children for"
          in: path
          required: true
          schema:
            type: string
        - name: skip
          description: "Pagination: Number of entities to skip"
          in: header
          required: false
          schema:
            type: integer
            default: 0
        - name: limit
          description: "Pagination: Number of entities to retrieve"
          in: header
          required: false
          schema:
            type: integer
            default: 500

      responses:
        '200':
          description: "List of children for the given program entity"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProgramEntity"
        '404':
          description: "If the entity identifier is not found, 404 is returned."


  /entities/{entityIdent}/processedBy:
    get:
      tags: ["Entity Related Information"]
      description: "Returns a paginated list of analysis runs that processed the program entity with the given identifier."
      parameters:
        - name: entityIdent
          description: "Identifier of the entity to retrieve analysis runs for"
          in: path
          required: true
          schema:
            type: string
        - name: skip
          description: "Pagination: Number of runs to skip"
          in: header
          required: false
          schema:
            type: integer
            default: 0
        - name: limit
          description: "Pagination: Number of runs to retrieve"
          in: header
          required: false
          schema:
            type: integer
            default: 500

      responses:
        '200':
          description: "List of analysis runs"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AnalysisRunInformation"
        '404':
          description: "If the entity identifier is not found, 404 is returned."

  /entities/{entityIdent}/results:
    get:
      tags: ["Entity Related Information"]
      description: "Returns a paginated list of analysis results for the program entity with the given identifier."
      parameters:
        - name: entityIdent
          description: "Identifier of the entity to retrieve results for"
          in: path
          required: true
          schema:
            type: string
        - name: skip
          description: "Pagination: Number of results to skip"
          in: header
          required: false
          schema:
            type: integer
            default: 0
        - name: limit
          description: "Pagination: Number of results to retrieve"
          in: header
          required: false
          schema:
            type: integer
            default: 500
        - name: analysis
          description: "Filter for analysis names"
          in: query
          required: false
          schema:
            type: string

      responses:
        '200':
          description: "List of results being returned"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
        '404':
          description: "If the entity identifier is not found, 404 is returned."

  /analyses:
    get:
      tags: ["Analysis Related Information"]
      description: "Returns a paginated list of all analyses registered"
      parameters:
        - name: skip
          description: "Pagination: Number of analyses to skip"
          in: header
          required: false
          schema:
            type: integer
            default: 0
        - name: limit
          description: "Pagination: Number of analyses to retrieve"
          in: header
          required: false
          schema:
            type: integer
            default: 50
      responses:
        '200':
          description: "List of analysis informations"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AnalysisInformation"

  /analyses/{analysisName}:
    get:
      tags: ["Analysis Related Information"]
      description: "Returns information on all versions of the analysis with the given name"
      parameters:
        - name: analysisName
          description: "Unique name of the analysis"
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: "List of all analysis information for versions of this analysis"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AnalysisInformation"
        '404':
          description: "If the analysis is not found, 404 is returned."

  /analyses/{analysisName}/{analysisVersion}:
    get:
      tags: ["Analysis Related Information"]
      description: "Returns information on the specified version of the analysis with the given name"
      parameters:
        - name: analysisName
          description: "Unique name of the analysis"
          in: path
          required: true
          schema:
            type: string
        - name: analysisVersion
          description: "Unique version of the analysis"
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: "Analysis information on the specified version of this analysis"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AnalysisInformation"
        '404':
          description: "If the analysis is not found, 404 is returned."

  /analyses/{analysisName}/{analysisVersion}/result-format:
    get:
      tags: ["Analysis Related Information"]
      description: "Returns information on the result format for the specified version of the analysis with the given name"
      parameters:
        - name: analysisName
          description: "Unique name of the analysis"
          in: path
          required: true
          schema:
            type: string
        - name: analysisVersion
          description: "Unique version of the analysis"
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: "Result format information for the specified analysis"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AnalysisFormatInformation"
        '404':
          description: "If the analysis is not found, 404 is returned."

  /analyses/{analysisName}/{analysisVersion}/results:
    get:
      tags: ["Analysis Related Information"]
      description: "Returns all results for the specified version of the analysis with the given name"
      parameters:
        - name: analysisName
          description: "Unique name of the analysis"
          in: path
          required: true
          schema:
            type: string
        - name: analysisVersion
          description: "Unique version of the analysis"
          in: path
          required: true
          schema:
            type: string
        - name: skip
          description: "Pagination: Number of results to skip"
          in: header
          required: false
          schema:
            type: integer
            default: 0
        - name: limit
          description: "Pagination: Number of results to retrieve"
          in: header
          required: false
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: "Paginated list of results for this analysis"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AnalysisResultInformation"
        '404':
          description: "If the analysis is not found, 404 is returned."

  /analyses/{analysisName}/{analysisVersion}/runs:
    post:
      tags: ["Analysis Related Information", "Processing Related Endpoints"]
      description: "Triggers a new analysis run for this analysis"
      parameters:
        - name: analysisName
          description: "Unique name of the analysis"
          in: path
          required: true
          schema:
            type: string
        - name: analysisVersion
          description: "Unique version of the analysis"
          in: path
          required: true
          schema:
            type: string

      requestBody:
        description: "Request with details regarding the analysis that is to be executed"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TriggerAnalysisRequest"

      responses:
        '202':
          description: "New analysis run has been queued"
          headers:
            Location:
              description: Full URL that can be used to query the run that has been triggered by this request.
              schema:
                type: string
                example: localhost:9090/api/analses/mvn-dependencies/1.0.0/runs/a0928f80-cc49-4b4e-bff9-a364e4b50f25

          content:
            text/plain:
              schema:
                description: The UID of the analysis run that is being triggered
                example: a0928f80-cc49-4b4e-bff9-a364e4b50f25


        '404':
          description: "If the analysis is not found, 404 is returned."
    get:
      tags: ["Analysis Related Information"]
      description: "Returns a paginated list of all analysis runs associated with this analysis"
      parameters:
        - name: analysisName
          description: "Unique name of the analysis"
          in: path
          required: true
          schema:
            type: string
        - name: analysisVersion
          description: "Unique version of the analysis"
          in: path
          required: true
          schema:
            type: string
        - name: input
          description: "Input-Entity to filter for"
          in: query
          required: false
          schema:
            type: string
        - name: skip
          description: "Pagination: Number of analysis runs to skip"
          in: header
          required: false
          schema:
            type: integer
            default: 0
        - name: limit
          description: "Pagination: Number of analysis runs to retrieve"
          in: header
          required: false
          schema:
            type: integer
            default: 50
      responses:
        '200':
          description: "List of information on analysis runs"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AnalysisRunInformation"
        '404':
          description: "If the analysis is not found, 404 is returned."

  /analyses/{analysisName}/{analysisVersion}/runs/{runId}:
    get:
      tags: ["Analysis Related Information"]
      description: "Returns information on an analysis run with the given name"
      parameters:
        - name: analysisName
          description: "Unique name of the analysis"
          in: path
          required: true
          schema:
            type: string
        - name: analysisVersion
          description: "Unique version of the analysis"
          in: path
          required: true
          schema:
            type: string
        - name: runId
          description: "Unique id of the analysis run"
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: "Analysis Run Information"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AnalysisRunInformation"
        '404':
          description: "If the analysis or the analysis run are not found, 404 is returned."

  /analyses/{analysisName}/{analysisVersion}/runs/{runId}/inputs:
    get:
      tags: ["Analysis Related Information"]
      description: "Returns a paginated list of program entities that were input into the given analysis run"
      parameters:
        - name: analysisName
          description: "Unique name of the analysis"
          in: path
          required: true
          schema:
            type: string
        - name: analysisVersion
          description: "Unique version of the analysis"
          in: path
          required: true
          schema:
            type: string
        - name: runId
          description: "Unique id of the analysis run"
          in: path
          required: true
          schema:
            type: string
        - name: skip
          description: "Pagination: Number of results to skip"
          in: header
          required: false
          schema:
            type: integer
            default: 0
        - name: limit
          description: "Pagination: Number of results to retrieve"
          in: header
          required: false
          schema:
            type: integer
            default: 50
      responses:
        '200':
          description: "List of program entities used as inputs"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProgramEntity"
        '404':
          description: "If the analysis or the analysis run are not found, 404 is returned."

  /analyses/{analysisName}/{analysisVersion}/runs/{runId}/results:
    get:
      tags: ["Analysis Related Information"]
      description: "Returns a paginated list of analysis results associated with the given analysis run"
      parameters:
        - name: analysisName
          description: "Unique name of the analysis"
          in: path
          required: true
          schema:
            type: string
        - name: analysisVersion
          description: "Unique version of the analysis"
          in: path
          required: true
          schema:
            type: string
        - name: runId
          description: "Unique id of the analysis run"
          in: path
          required: true
          schema:
            type: string
        - name: skip
          description: "Pagination: Number of results to skip"
          in: header
          required: false
          schema:
            type: integer
            default: 0
        - name: limit
          description: "Pagination: Number of results to retrieve"
          in: header
          required: false
          schema:
            type: integer
            default: 50
      responses:
        '200':
          description: "List of results produced by this run"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AnalysisResultInformation"
        '404':
          description: "If the analysis or the analysis run are not found, 404 is returned."


  /processing/enqueueEntity:
    post:
      tags: ["Processing Related Endpoints"]
      description: "Inserts a given package into the mining queue with high priority"
      requestBody:
        description: "Request specifying the identifier of the package to mine"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TriggerMinerRequest"
      responses:
        '202':
          description: "Mining request has been accepted"
        '302':
          description: "Found, entity is already indexed"
        '400':
          description: "Bad request missing required parameters"


components:
  schemas:
    StringList:
      type: array
      items:
        type: string

    AnalysisInformation:
      type: object
      required: [Name, Description, Version, IsRevoked, User, InputEntityKind, InputLanguages, ResultSchema, RunIds]
      properties:
        Name:
          type: string
        Description:
          type: string
        Version:
          type: string
        TechnologyInformation:
          type: string
        IsRevoked:
          type: boolean
        InputEntityKind:
          type: string
        InputLanguages:
          $ref: '#/components/schemas/StringList'
        ResultSchema:
          type: string
        User:
          type: string
        RunIds:
          $ref: '#/components/schemas/StringList'

    AnalysisFormatInformation:
      type: object
      required: [Description, FormatDefinition]
      properties:
        Description:
          type: string
          example: "This analysis counts the number of times the constant '42' is used in a given program."
        FormatDefinition:
          type: string
          example: "{\"Properties\": [{\"PropertyDescription\":\"Number of times 42 was used.\",\"PropertyFormat\":{\"Type\":\"NumberFormat\"},\"PropertyName\":\"numberOfTimes\",\"Type\":\"NamedPropertyFormat\"}]}"

    AnalysisRunInformation:
      type: object
      required: [UID, TimeStamp, Logs, Configuration, State, IsRevoked, AnalysisName]
      properties:
        UID:
          type: string
          example: a0928f80-cc49-4b4e-bff9-a364e4b50f25
        TimeStamp:
          type: string
          example: "2024-02-01T08:21:47.757713347"
        Logs:
          $ref: '#/components/schemas/StringList'
        Configuration:
          type: string
          example: --something
        State:
          type: string
          example: Finished
        IsRevoked:
          type: boolean
          example: False
        AnalysisName:
          type: string
          example: mvn-constant-classes
        AnalysisVersion:
          type: string
          example: 1.0.0
        Inputs:
          type: array
          items:
            $ref: "#/components/schemas/ProgramEntity"

    AnalysisResultInformation:
      type: object
      required: [UID, IsRevoked, JsonContent, AffectedEntityIds]
      properties:
        UID:
          type: string
          example: acbd43aa-8642-44b4-a757-28fdb355d2c0
        IsRevoked:
          type: boolean
          example: false
        JsonContent:
          type: string
          example: {\"numberOfTimes\": 42}
        AffectedEntityIds:
          $ref: '#/components/schemas/StringList'


    ProgramEntity:
      type: object
      required: ['Name', 'Identifier', 'Language', 'Kind', 'Repository']
      properties:
        Name:
          type: string
        Identifier:
          type: string
        Kind:
          type: string
        Language:
          type: string
        Repository:
          type: string
        ParentId:
          type: string
        Hash:
          type: string
        Children:
          type: array
          description: An optional array of child entity objects
          items:
            $ref: "#/components/schemas/ProgramEntity"
        ThisTypeFqn:
          type: string
        SuperTypeFqn:
          type: string
        InterfaceTypeFqns:
          type: array
          items:
            type: string
        IsInterface:
          type: boolean
        IsFinal:
          type: boolean
        IsStatic:
          type: boolean
        IsAbstract:
          type: boolean
        Visibility:
          type: string
        Descriptor:
          type: string
        TargetType:
          type: string
        MethodHash:
          type: integer
        PublishDate:
          type: string
      example:
        Name: setLength
        Identifier: "commons-io:commons-io!commons-io:commons-io:2.2!org/apache/commons/io/monitor!org/apache/commons/io/monitor/FileEntry!setLength: (J)V"
        Kind: Method
        Language: java
        Repository: central
        ParentId: "commons-io:commons-io!commons-io:commons-io:2.2!org/apache/commons/io/monitor!org/apache/commons/io/monitor/FileEntry"
        Children:
          - Name: setLength
            Identifier: "commons-io:commons-io!commons-io:commons-io:2.2!org/apache/commons/io/monitor!org/apache/commons/io/monitor/FileEntry!setLength: (J)V!2"
            Kind: FieldAccessStatement
            Language: java
            Repository: central
            ParentId: "commons-io:commons-io!commons-io:commons-io:2.2!org/apache/commons/io/monitor!org/apache/commons/io/monitor/FileEntry!setLength: (J)V"
            TargetType: org/apache/commons/io/monitor/FileEntry
        IsFinal: false
        IsStatic: false
        IsAbstract: false
        Visibility: public
        Descriptor: (J)V
        MethodHash: 234772383


    TriggerAnalysisRequest:
      type: object
      required: [Inputs, Configuration]
      properties:
        Inputs:
          type: array
          items:
            type: string
          description: List of full entity identifiers to be used as inputs for the analysis
        Configuration:
          type: string
        User:
          type: string
          description: Name of the user triggering this analysis
        BaselineRun:
          type: string
          description: UID of the run to use as a baseline (only works for incremental analyses)

      example:
        Inputs:
          - org.json:json!org.json:json:20070829
          - org.json:json!org.json:json:20080701
        Configuration: --be-fancy -use-algo Foo
        User: Ron Swanson
        BaselineRun: a0928f80-cc49-4b4e-bff9-a364e4b50f25

    TriggerMinerRequest:
      type: object
      required: [Identifiers]
      properties:
        Identifiers:
          type: array
          items:
            type: string
          description: Full names of the entities that are to be indexed. Supports GA-Tuple, GAV-Triple or any more specific identifier (the miner will always index the entire program the entity is part of).
          example: ['org.json:json!org.json:json:20070829']
    
          
        
  